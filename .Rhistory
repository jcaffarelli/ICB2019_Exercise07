five<-1:5
for (five in 1:5) {
print(five)
}
setwd("C:/Users/jcaff/Documents/Notre Dame/Senior/fall_19/Biocomputing/R/Notes")
for (i in letters) {
print(i)
}
#For loops in R
letters<-c('A','B','C','D')
for (i in letters) {
print(i)
}
for (i in 1:4) {
print(i)
}
#version 2: same functionality
for (i in 1:4) {
print(letters[i])
}
?paste
for(i in 1:4){
paste(letters)
}
newLetters<-letters
for(i in 1:4){
paste(letters[i])
}
for(i in 1:4){
print(paste(letters[i],sep = ","))
}
print(paste(letters[2i],sep = ","))
for(i in 1:4){
print(paste(letters[2xi],sep = ","))
}
for(i in 1:4){
print(paste(letters[2*i],sep = ","))
}
print(paste(letters[i],letters[i],sep = ""))
for(i in 1:4){
temp<-paste(letters[i],letters[i],sep = "")
print(temp)
}
newLetters<-letters
for(i in 1:4){
newLetters[i]<-paste(letters[i],letters[i],sep = "")
}
#write loop to get cumulative sum of vector of integers
numbers<-c('3','10','4','12','55')
for (i in 1:5){
test<-sum(numbers[i])
print(test)
}
#write loop to get cumulative sum of vector of integers
numbers<-c('3','10','4','12','55')
for (i in 1:5){
test<-sum(numbers)
print(test)
}
#write loop to get cumulative sum of vector of integers
numbers<-c[3,10,4,12,55]
#write loop to get cumulative sum of vector of integers
numbers<-c[3,10,4,12,55]
#write loop to get cumulative sum of vector of integers
numbers<-c(3,10,4,12,55)
for (i in 1:5){
test<-sum(numbers[i])
print(test)
}
for (i in 1:5){
test<-sum(numbers[i]!)
print(test)
}
for (i in 1:5){
test<-sum(numbers[i],numbers[i])
print(test)
}
for (i in 1:5){
test<-sum(numbers[i],numbers[i+1])
print(test)
}
for (i in 1:5){
test<-sum(numbers[i+1])
print(test)
}
test<-sum(numbers[1:5])
for (i in 1:5){
test<-sum(numbers[i(1:5)])
print(test)
}
for (i in 1:5){
test<-sum(numbers[i*(1:5)])
print(test)
}
for (i in 1:5){
test<-sum(numbers[i+(1:5)])
print(test)
}
numbers<-c(3,10,4,12,55)
output<-numeric(length(input))
for (i in 1:length(input)){
output[i]<-sum(input[1:i])
}
input<-c(3,10,4,12,55)
output<-numeric(length(input))
for (i in 1:length(input)){
output[i]<-sum(input[1:i])
}
setwd(~/..)
setwd(..)
setwd("C:/Users/jcaff/Documents/Notre Dame/Senior/fall_19/Biocomputing/R")
#loading wages
wages<-read.csv(wages.csv)
#loading wages
wages<-read.csv("wages.csv",header = TRUE)
#loading wages
wages<-read.csv("wages.csv",header = TRUE,stringsAsFactors = TRUE)
head(wages)
#sum wages
for(i in wages){
if(wages$gender=="male"){
maleWage<-sum(wages$wage)
}else{
femaleWage<-sum(wages$wage)
}
}
#sum wages
for(i in wages){
if(wages$gender=="male"){
maleWage<-sum(wages$wage)
}else{
femaleWage<-sum(wages$wage)
}
return(femaleWage)
}
#sum wages
for(i in wages){
if(i[wages$gender=="male"]){
maleWage<-sum(wages$wage)
}else{
femaleWage<-sum(wages$wage)
}
return(femaleWage)
}
dim(wages)
#sum wages
for(i in 1:3294){
if(i[wages$gender=="male"]){
maleWage<-sum(wages$wage)
}else{
femaleWage<-sum(wages$wage)
}
return(femaleWage)
}
head(wages)
#sum wages
for(i in 1:3294){
if(wages[i,1=="male"]){
maleWage<-sum(wages$wage)
}else{
femaleWage<-sum(wages$wage)
}
return(femaleWage)
}
setwd("C:/Users/jcaff/Documents/Notre Dame/Senior/fall_19/Biocomputing/R/Tutorial/Ex_07/ICB2019_Exercise07")
#loading iris.csv to iris
iris<-read.csv("iris.csv")
#loading iris.csv to iris
iris<-read.csv("iris.csv")
#Functions for Ex_06
#Function to return number of observations for a given species in a data set
numSpecies<-function(x,taxa){
tempSpecies<-x[x$Species==taxa]
return(dim(tempSpecies))
}
#Usage: numSpecies(x=object,taxa=Species of interest)
numSpecies(iris,"setosa")
#Usage: numSpecies(x=object,taxa=Species of interest)
numSpecies(iris,"setosa")
#Usage: numSpecies(x=object,taxa=Species of interest)
numSpecies(iris,setosa)
#Usage: numSpecies(x=object,taxa=Species of interest)
numSpecies(iris,"setosa")
#Function to return flowers with Sepal.Width greater than a specfied size
sepalWidth<-function(x,width){
tempwidth<-x[x$Sepal.Width>width,]
return(tempwidth)
}
sepalWidth(iris,3.5)
#Usage: sepalWidth(x=object,width=width greater than)
sepalWidth(iris,3.5)
tempSpecies<-x[x$Species=="taxa",]
#Usage: numSpecies(x=object,taxa=Species of interest)
numSpecies(iris,"setosa")
#Functions for Ex_06
#Function to return number of observations for a given species in a dataset
numSpecies<-function(x,taxa){
tempSpecies<-x[x$Species=="taxa",]
return(dim(tempSpecies))
}
#Usage: numSpecies(x=object,taxa=Species of interest)
numSpecies(iris,"setosa")
#data for a species to a .csv with the specified file name
setosa<-iris[iris$Species=="setosa",]
View(setosa)
#data for a species to a .csv with the specified file name
speciesCSV<-function(x,taxa,name.csv){
temp<-x[x$Species==taxa,]
write.csv(temp,file = "name.csv")
}
#Usage: speciesCSV(x=object,taxa=species,name.csv=nameofnewcsv)
speciesCSV(iris,"setosa","setosa.csv")
#Function to return odd rows
?call
#Function to return odd rows
oddRows<-function(x){
odds<-print(x[(TRUE,FALSE),])
}
#Function to return odd rows
oddRows<-function(x){
odds<-callNextMethod(x[(TRUE,FALSE),])
}
#Function to return odd rows
oddRows<-function(x){
odds<-callNextMethod[x(TRUE,FALSE),]
}
#Function to return odd rows
oddRows<-function(x){
odds<-callNextMethod[x(TRUE,FALSE),]
return(odds)
}
oddRows(iris)
setwd("C:/Users/jcaff/Documents/Jones Lab/hsSurvey")
#clear global environment
rm(list=ls())
setwd("C:/Users/jcaff/Documents/Notre Dame/Senior/fall_19/Biocomputing/R/Tutorial/Ex_07")
oddRows<-function(x){
odds<-callNextMethod[c(TRUE,FALSE),]
return(odds)
}
#Function to return odd rows
?seq
oddRows<-function(x){
for (i in 1:numeric(length(x))){
if (i %% 2 ==1) oddFileRow<-print(i)
return(oddFileRow)
}
}
oddRows(iris)
print(numeric(length(iris))
print(numeric(length(iris)))
numeric(length(iris))
setwd("C:/Users/jcaff/Documents/Notre Dame/Senior/fall_19/Biocomputing/R/Tutorial/Ex_07/ICB2019_Exercise07")
#loading iris.csv to iris
iris<-read.csv("iris.csv")
oddRows<-function(x){
for (i in 1:numeric(length(x))){
if (i %% 2 ==1) oddFileRow<-print(i)
return(oddFileRow)
}
}
oddRows(iris)
numeric(length(iris))
